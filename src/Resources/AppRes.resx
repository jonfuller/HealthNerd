<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MainPage_HealtKitAuthorization_Error_Button" xml:space="preserve">
    <value>Sorry</value>
  </data>
  <data name="MainPage_HealtKitAuthorization_Error_Message" xml:space="preserve">
    <value>Something went wrong. 😢

We'll try to take a look at it.</value>
  </data>
  <data name="MainPage_HealtKitAuthorization_Error_Title" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="MainPage_HealtKitAuthorization_Success_Button" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="MainPage_HealtKitAuthorization_Success_Message" xml:space="preserve">
    <value>Looks like you did it! 👏</value>
  </data>
  <data name="MainPage_HealtKitAuthorization_Success_Title" xml:space="preserve">
    <value>Connected</value>
  </data>
  <data name="Settings_IsAuthorizedButton_False" xml:space="preserve">
    <value>Connect Now</value>
  </data>
  <data name="Settings_IsAuthorizedButton_True" xml:space="preserve">
    <value>✔️ Connected</value>
  </data>
  <data name="Settings_LengthUnit_Meters" xml:space="preserve">
    <value>Meters</value>
  </data>
  <data name="Settings_LengthUnit_Miles" xml:space="preserve">
    <value>Miles</value>
  </data>
  <data name="Settings_MassUnit_Kilograms" xml:space="preserve">
    <value>Kilograms</value>
  </data>
  <data name="Settings_MassUnit_Pounds" xml:space="preserve">
    <value>Pounds</value>
  </data>
  <data name="Settings_Section_GettingStarted" xml:space="preserve">
    <value>Getting Started</value>
  </data>
  <data name="Settings_Section_UnitsOfMeasure" xml:space="preserve">
    <value>Units of Measurement</value>
  </data>
  <data name="Settings_GettingStarted_AuthorizationStatusLabel" xml:space="preserve">
    <value>❤️ Apple Health</value>
  </data>
  <data name="Settings_GettingStarted_FetchSinceDateLabel" xml:space="preserve">
    <value>📅 Use Data Since</value>
  </data>
  <data name="Settings_UnitsOfMeasure_DistanceUnit" xml:space="preserve">
    <value>📏 Distance Unit</value>
  </data>
  <data name="Settings_UnitsOfMeasure_MassUnit" xml:space="preserve">
    <value>⚖️ Weight/Mass Unit</value>
  </data>
  <data name="Settings_UnitsOfMeasure_NotSet" xml:space="preserve">
    <value>not set</value>
  </data>
  <data name="Settings_EnergyUnit_Calories" xml:space="preserve">
    <value>Calories</value>
  </data>
  <data name="Settings_EnergyUnit_Kilocalories" xml:space="preserve">
    <value>Kilocalories</value>
  </data>
  <data name="Settings_Section_ExcelExportSettings" xml:space="preserve">
    <value>Excel Export Settings</value>
  </data>
  <data name="Settings_UnitsOfMeasure_EnergyUnit" xml:space="preserve">
    <value>🤤 Energy Unit</value>
  </data>
  <data name="Settings_DurationUnit_Hours" xml:space="preserve">
    <value>Hours</value>
  </data>
  <data name="Settings_DurationUnit_Minutes" xml:space="preserve">
    <value>Minutes</value>
  </data>
  <data name="Settings_ExcelExport_NumMonthlySummaries" xml:space="preserve">
    <value># Monthly Summaries</value>
  </data>
  <data name="Settings_ExcelExport_OmitEmptyColumnsOnMonthly" xml:space="preserve">
    <value>Omit Empty Cols On Monthly Summary</value>
  </data>
  <data name="Settings_ExcelExport_OmitEmptyColumnsOnOverall" xml:space="preserve">
    <value>Omit Empty Cols On Overall Summary</value>
  </data>
  <data name="Settings_ExcelExport_OmitEmptySheets" xml:space="preserve">
    <value>Omit Empty Sheets</value>
  </data>
  <data name="Settings_UnitsOfMeasure_DurationUnit" xml:space="preserve">
    <value>⏱️ Duration Unit</value>
  </data>
  <data name="MainPage_AuthorizeHealth_Button" xml:space="preserve">
    <value>Grant HealthNerd Access</value>
  </data>
  <data name="MainPage_AuthorizeHealth_Icon" xml:space="preserve">
    <value>👋</value>
  </data>
  <data name="MainPage_AuthorizeHealth_Text" xml:space="preserve">
    <value>First, we'll need to get access to your Health data.</value>
  </data>
  <data name="MainPage_AuthorizeHealth_Title" xml:space="preserve">
    <value>Let's Get Started.</value>
  </data>
  <data name="MainPage_FirstTimeSetup_Button" xml:space="preserve">
    <value>Data Nerdery Setup 🗃️</value>
  </data>
  <data name="MainPage_FirstTimeSetup_Icon" xml:space="preserve">
    <value>🤔</value>
  </data>
  <data name="MainPage_FirstTimeSetup_Text" xml:space="preserve">
    <value>Let's make sure the data comes out looking the way you want.</value>
  </data>
  <data name="MainPage_FirstTimeSetup_Title" xml:space="preserve">
    <value>First Time Here?</value>
  </data>
  <data name="MainPage_NerdOut_Button" xml:space="preserve">
    <value>Nerd My Data</value>
  </data>
  <data name="MainPage_NerdOut_Icon" xml:space="preserve">
    <value>🤓</value>
  </data>
  <data name="MainPage_NerdOut_Title" xml:space="preserve">
    <value>Time to Nerd Out!</value>
  </data>
  <data name="MainPage_Title" xml:space="preserve">
    <value>Health Nerd</value>
  </data>
  <data name="MainPage_ToolbarItem_Settings" xml:space="preserve">
    <value>⚙️</value>
  </data>
  <data name="Settings_Title" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="MainPage_Status_Complete" xml:space="preserve">
    <value>shared file {0}</value>
    <comment>{0} - filename</comment>
  </data>
  <data name="MainPage_Status_Error" xml:space="preserve">
    <value>an error occurred</value>
  </data>
  <data name="MainPage_Status_Gathering" xml:space="preserve">
    <value>gathering data</value>
  </data>
  <data name="MainPage_Status_SavingFile" xml:space="preserve">
    <value>writing file</value>
  </data>
  <data name="MainPage_Status_SharingFile" xml:space="preserve">
    <value>sharing file</value>
  </data>
  <data name="ExportSettings_Title" xml:space="preserve">
    <value>Export Settings</value>
  </data>
  <data name="Settings_About_ArtworkBy" xml:space="preserve">
    <value>Artwork by Justin Muse (@JM_Designz)</value>
  </data>
  <data name="Settings_About_MadeBy" xml:space="preserve">
    <value>Made at SEP in Indiana</value>
  </data>
</root>